#!/usr/bin/python

import sys, subprocess, os

def usage():
    print "config <debug|release>"
    sys.exit(1)

def main():
    if len(sys.argv) < 2:
        usage()

    mode = sys.argv[1]
    env = dict(os.environ)
    # -flto in cflags?
    env['CFLAGS'] = '-std=c99'
    # env['LDFLAGS'] = '-flto'
    env['CFLAGS'] += ' -D_FORIFY_SOURCE=2 -Wformat -Wformat-security'

    for mode in sys.argv[1:]:
        if mode == "debug":
            env['CFLAGS'] += ' -pedantic -Wall -Wfloat-equal -Wbad-function-cast -Wshadow -Wpointer-arith -Wcast-qual -Wstrict-prototypes -Wdeclaration-after-statement -Wuninitialized -Wstrict-overflow=5 -Wextra -Wno-unused-parameter -Wfatal-errors -Wwrite-strings -Wunreachable-code'
            env['CFLAGS'] += ' -g'
        elif mode == "profile":
            env['CFLAGS'] += ' -pg -finstrument-functions'
        elif mode == "release":
            env['CFLAGS'] += ' -DG_DISABLE_ASSERT'
        elif mode == "opt2":
            env['CFLAGS'] += ' -O2'
        elif mode == "release":
            pass
        else:
            usage()

    subprocess.call(["make", "clean"])
    subprocess.call(["./configure"], env=env)
    subprocess.call(["make", "-j120"])

if __name__ == '__main__':
    main()

